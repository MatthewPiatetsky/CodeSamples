package photoshare;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

/**
 * A data access object (DAO) to handle the Users table
 *
 */
public class NewUserDao {
  private static final String CHECK_EMAIL_STMT = "SELECT " +
      "COUNT(*) FROM Users WHERE email = ?";

  private static final String NEW_USER_STMT = "INSERT INTO " +
      "Users (email, first_name, last_name, date_of_birth, gender, password, hometown_address, current_address, education_information) VALUES (?,?,?,?,?,?,?,?,?)";


    private static final String ALL_USER_SCORES = "SELECT Comments.user_id,Count(*) as cnt FROM (Comments LEFT JOIN (USERS LEFT JOIN Pictures on Pictures.email=Users.email) on Pictures.email=Users.email) GROUP BY Comments.user_id ORDER BY cnt DESC";


    private static final String ALL_USERS = "SELECT first_name,last_name FROM Users"; 
    private static final String MY_ALBUMS = "SELECT album_name FROM Albums WHERE user_id=?";
private static final String ALL_ALBUMS = "SELECT album_name FROM Albums";
    private static final String GET_USER_ID = "SELECT \"user_id\" FROM users WHERE first_name=? AND last_name=?";
  private static final String ALL_PICTURE_IDS_STMT = "SELECT \"picture_id\" FROM comments WHERE \"user_id\"=?  ORDER BY \"picture_id\" DESC";

    public boolean create(String email, String first_name, String last_name, String date_of_birth, String gender, String password, String hometown_address, String current_address, String education_information ) {
    PreparedStatement stmt = null;
    Connection conn = null;
    ResultSet rs = null;
    try {
      conn = DbConnection.getConnection();
      stmt = conn.prepareStatement(CHECK_EMAIL_STMT);
      stmt.setString(1, email);
      rs = stmt.executeQuery();
      if (!rs.next()) {
        // Theoretically this can't happen, but just in case...
        return false;
      }
      int result = rs.getInt(1);
      if (result > 0) {
        // This email is already in use
        return false; 
      }
      
      try { stmt.close(); }
      catch (Exception e) { }
      stmt = conn.prepareStatement(NEW_USER_STMT);

      
      stmt.setString(1,email);      
      stmt.setString(2,first_name);
      stmt.setString(3,last_name);
      stmt.setString(4,date_of_birth);
      stmt.setString(5,gender);
      stmt.setString(6,password);
      stmt.setString(7,hometown_address);
      stmt.setString(8,current_address);
      stmt.setString(9,education_information);
      
      stmt.executeUpdate();

      return true;
    } catch (SQLException e) {
      e.printStackTrace();
      throw new RuntimeException(e);
    } finally {
      if (rs != null) {
        try { rs.close(); }
        catch (SQLException e) { ; }
        rs = null;
      }
      
      if (stmt != null) {
        try { stmt.close(); }
        catch (SQLException e) { ; }
        stmt = null;
      }
      
      if (conn != null) {
        try { conn.close(); }
        catch (SQLException e) { ; }
        conn = null;
      }
    }
    }
    public List<String> allUsers() throws SQLException {
                PreparedStatement stmt = null;
                Connection conn = null;
                ResultSet rs = null;

                List<String> userText = new ArrayList<String>(); 
                        conn = DbConnection.getConnection();
                        stmt = conn.prepareStatement(ALL_USERS);
			rs = stmt.executeQuery();
                        while (rs.next()) {
                            String first_name = rs.getString(1);
			    String last_name = rs.getString(2);
			    String finaltext = " " + first_name + " " + last_name;
			    userText.add(finaltext);
                        }

                        rs.close();
                        rs = null;

                        stmt.close();
                        stmt = null;

                        conn.close();
                        conn = null;

			return userText;
		
}

    public List<String> allUserScores() throws SQLException {
	PreparedStatement stmt = null;
	Connection conn = null;
	ResultSet rs = null;

	List<String> userText = new ArrayList<String>();
	conn = DbConnection.getConnection();
	stmt = conn.prepareStatement(ALL_USER_SCORES);
	rs = stmt.executeQuery();
	while (rs.next()) {
	    int id = rs.getInt(1);
	    NewCommentDao newCommentDao = new NewCommentDao();
	    String name = newCommentDao.getUserName(id);
	    String email = newCommentDao.getEmail(id);
	    int score  = rs.getInt(2);
	    String finaltext = " " + name + "(" + email +") has a contribution score of: " + score;           
userText.add(finaltext);
	}

	rs.close();
	rs = null;

	stmt.close();
	stmt = null;

	conn.close();
	conn = null;

	return userText;
    }


    public List<String> allAlbums() throws SQLException {
        PreparedStatement stmt = null;
        Connection conn = null;
        ResultSet rs = null;

        List<String> albumNames = new ArrayList<String>();
        conn = DbConnection.getConnection();
        stmt = conn.prepareStatement(ALL_ALBUMS);
        rs = stmt.executeQuery();
        while (rs.next()) {
            String album_name = rs.getString(1);
            albumNames.add(album_name);
        }

        rs.close();
        rs = null;

        stmt.close();
	stmt = null;

        conn.close();
        conn = null;

        return albumNames;

    }



    public List<String> myAlbums(int user_id) throws SQLException {
	PreparedStatement stmt = null;
	Connection conn = null;
	ResultSet rs = null;

	List<String> albumNames = new ArrayList<String>();
	conn = DbConnection.getConnection();
	stmt = conn.prepareStatement(MY_ALBUMS);
	stmt.setInt(1,user_id);
	rs = stmt.executeQuery();
	while (rs.next()) {
	    String album_name = rs.getString(1);
            albumNames.add(album_name);
	}

	rs.close();
	rs = null;

	stmt.close();
	stmt = null;

	conn.close();
	conn = null;

	return albumNames;

    }


public List<Integer> allPicturesIds(String user_name) {
                PreparedStatement stmt = null;
		Connection conn = null;
		ResultSet rs = null;
		
		String[] name = user_name.split(" ");
		if(name.length!=3){throw new RuntimeException("0" + name[0]+ " " + "1" + name[1] +"2" + name[2]); 
		}
		String first_name = name[1];
		String last_name = name[2];
		List<Integer> picturesIds = new ArrayList<Integer>();
		try {
			conn = DbConnection.getConnection();
			stmt = conn.prepareStatement(GET_USER_ID);
			stmt.setString(1,first_name);
			stmt.setString(2,last_name);
			rs = stmt.executeQuery();
			int userid = 0;
			while (rs.next()) {
				userid=(rs.getInt(1));
			}
			rs=null;
			stmt = conn.prepareStatement(ALL_PICTURE_IDS_STMT);
			stmt.setInt(1,userid);
			rs = stmt.executeQuery();
			while (rs.next()){
			    picturesIds.add(rs.getInt(1));
			}
			rs.close();
			rs = null;

			stmt.close();
			stmt = null;

			conn.close();
			conn = null;
		} catch (SQLException e) {
			e.printStackTrace();
			throw new RuntimeException(e);
		} finally {
			if (rs != null) {
				try { rs.close(); } catch (SQLException e) { ; }
				rs = null;
			}
			if (stmt != null) {
				try { stmt.close(); } catch (SQLException e) { ; }
				stmt = null;
			}
			if (conn != null) {
				try { conn.close(); } catch (SQLException e) { ; }
				conn = null;
			}
		}

		return picturesIds;
	}

}
